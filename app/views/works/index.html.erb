<div id="wrapper-tvp" >
	<div id="container-tvp">
		<div id="banner-tvp" >
			<%= render partial: "shared/banner_tvp", locals: { :bco => false } %>
		</div>

		<div style="margin-top: 25px;">
			<%= render partial: "shared/menu_tvp" %>
		</div>


		<div id="work-grids-container" style="background: #FFFFFF;">
			<div class="scrollingHotSpotLeft" style="opacity: 0;"><%= image_tag "prev_gallery.png", :style => "width: 100%; height: 100%" %></div>
			<div class="scrollingHotSpotRight" style="opacity: 0;"><%= image_tag "next_gallery.png", :style => "width: 100%; height: 100%" %></div>
			<div class="scrollWrapper">
				<div class="scrollableArea">
					<% i = 0 %>
					<% @work_grids.each do |work_grid| %>
						<div id="grid-<%= i %>" class="work-grid" style="width: 112.5%; height: 500px; position: absolute; left: <%= i * 100 %>%;">

							<% j = 0 %>
							<% work_grid.grid_elements.each do |grid_element| %>
								<div id="element-<%= i %>-<%= j %>" class="grid-element-<%= grid_element.box %>" data="" img-url="" work-url="">

									<% if grid_element.work.present? %>
										<script type="text/javascript">
											var container = $("#element-<%= i %>-<%= j %>");
											container.attr("data", "<%= grid_element.x %>;<%= grid_element.y %>;<%= grid_element.w %>;<%= grid_element.h %>")
											container.attr("img-url", "<%= Photo.find(grid_element.display).image.url(:display) %>");
											container.attr("work-url", "<%= work_path(grid_element.work_id) %>");
										</script>

										<div class="grid-element-info">
											<%= grid_element.work.titles_grid.html_safe %>
										</div>
									<% end %>

								</div>

								<% j = j + 1 %>
							<% end %>

							<% if i == 0 %>
								<div class="grid-element-extra-0" data="" img-url="" work-url=""></div>
							<% elsif i == (@work_grids.length - 1) %>
								<div class="grid-element-extra-1" data="" img-url="" work-url=""></div>
							<% end %>
						</div>

						<% i = i + 1 %>
					<% end %>
				</div>
			</div>
		</div>

		<div id="lower-bar" style="width: 100%; height: 50px; background: #000000;"></div>

		<div id="legals-tvp">
			<%= render partial: "shared/legals_tvp", locals: { :bco => false } %>
		</div>

		<script type="text/javascript">
			function correctLineHeight(elem) {
				elem.find("p").each(function() {
					var maxFontSize = 0;

					$(this).find("span").each(function() {
						var currFontSize = parseInt($(this).css('font-size').replace("px", ""));
						if(maxFontSize < currFontSize) {
							maxFontSize = currFontSize;
						}
					});

					if(maxFontSize == 0) {
						$(this).css("line-height", "9px");
					} else {
						$(this).css("line-height", maxFontSize + "px");
					}
				});
			}

			$(function() {
				$("html").css("width", "100%");
				$("html").css("min-height", "100%");
				$("html").css("background", "linear-gradient(top , #FFFFFF, #a3a3a3) repeat-x");
				$("html").css("background", "-moz-linear-gradient(top , #FFFFFF , #a3a3a3) repeat-x");
				$("html").css("background", "-webkit-linear-gradient(top , #FFFFFF , #a3a3a3)repeat-x");
				$("html").css("background", "-ms-linear-gradient(top, #FFFFFF , #a3a3a3)repeat-x");
				$("html").css("filter", "progid:DXImageTransform.Microsoft.Gradient(startColorstr='#FFFFFF', endColorstr='#a3a3a3')");

				$("#legals-tvp").hover(function() {
					$("#legals-tvp img").attr('src', "/assets/02-LEGALESTXT.png");
				}, function() {
					$("#legals-tvp img").attr('src', "/assets/01-LEGALESTXT.png");
				});

				
				for (var i = 0; i <= 14; i++) {
					var container = $(".grid-element-" + i);

					container.each(function() {
						correctLineHeight($(this));

						// Se colocan bien las imagenes
						var img_url = $(this).attr("img-url");

						if(img_url != "") {

							// Se agrega la imagen
							var dataAttr = $(this).attr("data").split(";");
							var data = {
								x: parseFloat(dataAttr[0]),
								y: parseFloat(dataAttr[1]),
								w: parseFloat(dataAttr[2]),
								h: parseFloat(dataAttr[3]),
							}

							var that = this;
							var img = new Image();
							img.onload = function() {
								$(img).prependTo($(that));

								var newW = Math.round(($(that).width() * $(img).width()) / data.w);
								var newH = Math.round(($(that).height() * $(img).height()) / data.h);
								var mLeft = Math.round((newW * data.x) / $(img).width());
								var mRight = Math.round((newH * data.y) / $(img).height());

								var scaleFactor = 0.1;
								var box = parseInt($(that).attr("class").replace("grid-element-", ""));
								if(box == 0 || box == 3 || box == 12 || box == 14 || box == 1 || box == 4 || box == 7 || box == 9 || box == 11 || box == 13) {
									scaleFactor = 50.0 / $(img).height();
								} else if(box == 2 || box == 6 || box == 8 || box == 10) {
									scaleFactor = 125.0 / $(img).height();
								} else if(box == 5) {
									scaleFactor = 100.0 / $(img).width();
								}

								$(img).css({
									width: newW + 'px',
									height: newH + 'px',
									marginLeft: '-' + mLeft + 'px',
									marginTop: '-' + mRight + 'px'
								});
								
								// Se le da el efecto hover
								$(that).hover(function() {
									$(this).find('img').animate({
										width: $(img).width() * scaleFactor,
										height: $(img).height() * scaleFactor,
										marginTop: 5,
										marginLeft: 5
									}, 500)
								}, function() {
									$(this).find('img').animate({
										width: newW + 'px',
										height: newH + 'px',
										marginLeft: '-' + mLeft + 'px',
										marginTop: '-' + mRight + 'px'
									}, 300);
								});

								// Se le pone cursor de manita
								$(that).css("cursor", "pointer");

								// Se le da accion de click
								$(that).click(function() {
									$(location).attr("href", $(this).attr("work-url"));
								});
							}

							img.src = img_url;
						}
					});
				}

				$("#work-grids-container").smoothDivScroll({
					manualContinuousScrolling: true,
					easingAfterHotSpotScrolling: false,
					hotSpotScrollingStep: 4,
					setupComplete: function() {

						// Se redimensiona el area scrollable
						$(".scrollableArea").first().width("100%");

						// Dandole eventos a los hotspots
						$(".scrollingHotSpotLeft").first().bind("mouseout", function() {
							var scrollerOffset = Math.floor($("div#work-grids-container").smoothDivScroll("getScrollerOffset"));
							$("div#work-grids-container").smoothDivScroll("move", -1 * (scrollerOffset % 125) + 1);
						});

						$(".scrollingHotSpotRight").first().bind("mouseout", function() {
							var scrollerOffset = Math.floor($("div#work-grids-container").smoothDivScroll("getScrollerOffset"));
							$("div#work-grids-container").smoothDivScroll("move", -1 * (scrollerOffset % 125) + 1);
						});

					}
				});

			});
		</script>
	</div>
</div>